{%- set galera_ips = [] -%}
{%- set galera_node_address = pillar['mariadb']['galera']['minions'][grains.id] -%}
{%- for minion, ip in pillar['mariadb']['galera']['minions'].items() -%}
{%- if minion != grains.id and configure_galera_cluster -%}
{%- do galera_ips.append(ip) -%}
{%- endif -%}
{%- endfor -%}
#
# * Galera-related settings
#
# See the examples of server wsrep.cnf files in /usr/share/mysql
# and read more at https://mariadb.com/kb/en/galera-cluster/

[galera]
# Mandatory settings
wsrep_on                 = ON
wsrep_provider           = /usr/lib/galera/libgalera_smm.so
wsrep_provider_options   = gmcast.listen_addr=tcp://{{ galera_node_address }}:4567;ist.recv_addr={{ galera_node_address }};ist.recv_bind={{ galera_node_address }}
wsrep_cluster_name       = "salt-openstack Galera Cluster"
wsrep_cluster_address    = gcomm://{{ ','.join(galera_ips) }}
binlog_format            = row
default_storage_engine   = InnoDB
innodb_autoinc_lock_mode = 2

# Galera settings
wsrep_node_address = {{ galera_node_address }}
wsrep_node_name = "{{ grains.id }}"

# Allow server to accept connections on all interfaces.
bind-address = {{ grains['ip4_interfaces']['vrf-mgmt' if grains.get('virtual', 'virtual') == 'physical' and pillar.get('ifupdown', {}).get('managed', True) else grains['mgmt_interface']][0] }}

# Optional settings
#wsrep_slave_threads = 1
#innodb_flush_log_at_trx_commit = 0
