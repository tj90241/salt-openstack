#!/bin/bash -xe
# -----------------------------------------------------------------------------
#  This script will bootstrap and baseline a Salt Minion node.  It can be
#  specified as userdata script when launching an OpenStack instance, or
#  uploaded to and run on a baremetal node.
# -----------------------------------------------------------------------------
DEBIAN_MAJOR_VERSION=`awk -F '.' '{print $1}' /etc/debian_version`
DEBIAN_RELEASE_NAME=`lsb_release -sc`
DEFAULT_MINION_NAME=${DEFAULT_MINION_NAME:="$( hostname -s )"}
export PATH=/usr/sbin:/usr/bin:/sbin:/bin

# If not master hostname is supplied, try to use the FQDN if we know the domain name.
if [ -z "$( hostname -d )" ]; then
	DEFAULT_MASTER_HOSTNAME=${DEFAULT_MASTER_HOSTNAME:="salt"}
else
	DEFAULT_MASTER_HOSTNAME=${DEFAULT_MASTER_HOSTNAME:="salt.$( hostname -d )"}
fi

# Until SaltStack supports bullseye...
if [ "${DEBIAN_MAJOR_VERSION}"="11" ]; then
	DEBIAN_MAJOR_VERSION="10"
	DEBIAN_RELEASE_NAME="buster"
fi

# Upgrade the base system, install curl, and gnupg2 (for apt-key).
export DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical
apt-get update && apt-get dist-upgrade -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" 
apt-get install -y curl gnupg2

# Provision the upstream Saltstack repository.
curl -sL "https://repo.saltstack.com/py3/debian/${DEBIAN_MAJOR_VERSION}/amd64/archive/3003.3/SALTSTACK-GPG-KEY.pub" | apt-key add -
echo "deb http://repo.saltstack.com/py3/debian/${DEBIAN_MAJOR_VERSION}/amd64/archive/3003.3 ${DEBIAN_RELEASE_NAME} main" > /etc/apt/sources.list.d/saltstack.list
apt-get update

# Install and configure the minion.
mkdir -p /etc/salt/minion.d
echo "${DEFAULT_MINION_NAME}" > /etc/salt/minion_id
echo "master: ${DEFAULT_MASTER_HOSTNAME}" > /etc/salt/minion.d/master.conf
cat <<- EOF > /etc/salt/minion.d/superseded.conf 
use_superseded:
  - module.run
EOF

apt-get install -y salt-minion
systemctl start salt-minion

# Wait for key acceptance, sync the world.
while [ 1 ]; do
  salt-call test.ping && break
  sleep 10
done

salt-call saltutil.sync_all

# Baseline the minion, poll till its up.  We do two provisioning passes
# because in case the minion has a roles with recursive definitions.
for pass in first second; do
  salt-call state.apply salt.minion
  systemctl restart salt-minion

  while [ 1 ]; do
    salt-call test.ping && break
  done
done
